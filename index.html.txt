<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cervical Spine AI Analyzer</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            color: white;
            margin-bottom: 30px;
            animation: fadeInDown 1s ease-out;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .main-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
            animation: fadeInUp 1s ease-out;
        }

        .upload-section {
            padding: 40px;
            text-align: center;
            border-bottom: 1px solid #eee;
        }

        .upload-area {
            border: 3px dashed #ddd;
            border-radius: 15px;
            padding: 40px;
            transition: all 0.3s ease;
            cursor: pointer;
            margin-bottom: 20px;
        }

        .upload-area:hover {
            border-color: #667eea;
            background: #f8f9ff;
        }

        .upload-area.dragover {
            border-color: #667eea;
            background: #f0f2ff;
            transform: scale(1.02);
        }

        .upload-icon {
            font-size: 3rem;
            color: #667eea;
            margin-bottom: 15px;
        }

        .upload-text {
            font-size: 1.2rem;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .upload-subtext {
            color: #666;
            font-size: 0.9rem;
        }

        .file-input {
            display: none;
        }

        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 10px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .preview-section {
            padding: 30px 40px;
            display: none;
        }

        .image-preview {
            max-width: 100%;
            max-height: 400px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .analysis-section {
            padding: 40px;
            display: none;
        }

        .loading {
            text-align: center;
            padding: 40px;
            display: none;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        .results-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .result-card {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 25px;
            border-left: 5px solid;
            transition: all 0.3s ease;
        }

        .result-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }

        .result-card.lordosis {
            border-left-color: #007bff;
        }

        .result-card.airway {
            border-left-color: #28a745;
        }

        .result-card.alignment {
            border-left-color: #fd7e14;
        }

        .result-card.soft-tissue {
            border-left-color: #6f42c1;
        }

        .result-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .result-icon {
            font-size: 1.5rem;
            margin-right: 12px;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }

        .result-title {
            font-size: 1.2rem;
            font-weight: 600;
            flex: 1;
        }

        .result-status {
            font-size: 0.9rem;
            padding: 4px 12px;
            border-radius: 20px;
            font-weight: 500;
            margin-bottom: 10px;
            display: inline-block;
        }

        .status-normal {
            background: #d4edda;
            color: #155724;
        }

        .status-abnormal {
            background: #f8d7da;
            color: #721c24;
        }

        .status-warning {
            background: #fff3cd;
            color: #856404;
        }

        .result-description {
            color: #666;
            line-height: 1.5;
            margin-bottom: 15px;
        }

        .result-metrics {
            background: white;
            border-radius: 8px;
            padding: 15px;
            margin-top: 15px;
        }

        .metric {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }

        .metric:last-child {
            margin-bottom: 0;
        }

        .metric-label {
            font-weight: 500;
            color: #555;
        }

        .metric-value {
            font-weight: 600;
            color: #333;
        }

        .report-section {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 30px;
            margin-top: 30px;
        }

        .report-header {
            text-align: center;
            margin-bottom: 25px;
            border-bottom: 2px solid #667eea;
            padding-bottom: 15px;
        }

        .report-content {
            line-height: 1.8;
            color: #444;
        }

        .actions {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-top: 30px;
            flex-wrap: wrap;
        }

        .disclaimer {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
        }

        .disclaimer h3 {
            color: #856404;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }

        .disclaimer p {
            color: #856404;
            font-size: 0.9rem;
            line-height: 1.6;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .header h1 {
                font-size: 2rem;
            }

            .upload-section,
            .preview-section,
            .analysis-section {
                padding: 20px;
            }

            .results-grid {
                grid-template-columns: 1fr;
            }

            .actions {
                flex-direction: column;
                align-items: center;
            }
        }

        .confidence-bar {
            width: 100%;
            height: 8px;
            background: #e9ecef;
            border-radius: 4px;
            overflow: hidden;
            margin-top: 10px;
        }

        .confidence-fill {
            height: 100%;
            background: linear-gradient(90deg, #28a745, #ffc107, #dc3545);
            transition: width 0.5s ease;
        }

        .tabs {
            display: flex;
            border-bottom: 2px solid #eee;
            margin-bottom: 25px;
        }

        .tab {
            flex: 1;
            padding: 15px;
            text-align: center;
            cursor: pointer;
            background: none;
            border: none;
            font-size: 1rem;
            color: #666;
            transition: all 0.3s ease;
        }

        .tab.active {
            color: #667eea;
            border-bottom: 3px solid #667eea;
            font-weight: 600;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
            animation: fadeInUp 0.5s ease;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-x-ray"></i> Cervical Spine AI Analyzer</h1>
            <p>Advanced X-ray Analysis for Medical Professionals</p>
        </div>

        <div class="main-card">
            <!-- Upload Section -->
            <div class="upload-section" id="uploadSection">
                <div class="upload-area" id="uploadArea">
                    <div class="upload-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="upload-text">Drop your X-ray image here</div>
                    <div class="upload-subtext">or click to browse files</div>
                </div>
                <input type="file" id="fileInput" class="file-input" accept="image/*">
                <button class="btn" onclick="document.getElementById('fileInput').click()">
                    <i class="fas fa-folder-open"></i> Choose File
                </button>
                <button class="btn" id="demoBtn">
                    <i class="fas fa-eye"></i> Try Demo
                </button>
            </div>

            <!-- Preview Section -->
            <div class="preview-section" id="previewSection">
                <div style="text-align: center;">
                    <img id="imagePreview" class="image-preview" alt="X-ray preview">
                    <div style="margin-top: 20px;">
                        <button class="btn" id="analyzeBtn">
                            <i class="fas fa-brain"></i> Analyze X-ray
                        </button>
                        <button class="btn" onclick="resetAnalysis()" style="background: #6c757d;">
                            <i class="fas fa-redo"></i> Upload New Image
                        </button>
                    </div>
                </div>
            </div>

            <!-- Loading Section -->
            <div class="loading" id="loadingSection">
                <div class="spinner"></div>
                <h3>Analyzing X-ray...</h3>
                <p>Our AI is examining the cervical spine structure</p>
            </div>

            <!-- Analysis Results Section -->
            <div class="analysis-section" id="analysisSection">
                <div class="tabs">
                    <button class="tab active" onclick="showTab('results')">
                        <i class="fas fa-chart-line"></i> Results
                    </button>
                    <button class="tab" onclick="showTab('report')">
                        <i class="fas fa-file-medical"></i> Medical Report
                    </button>
                    <button class="tab" onclick="showTab('details')">
                        <i class="fas fa-info-circle"></i> Technical Details
                    </button>
                </div>

                <!-- Results Tab -->
                <div class="tab-content active" id="resultsTab">
                    <div class="results-grid" id="resultsGrid">
                        <!-- Results will be populated here -->
                    </div>
                </div>

                <!-- Report Tab -->
                <div class="tab-content" id="reportTab">
                    <div class="report-section">
                        <div class="report-header">
                            <h2><i class="fas fa-file-medical-alt"></i> RADIOLOGY REPORT</h2>
                            <p id="reportDate"></p>
                        </div>
                        <div class="report-content" id="reportContent">
                            <!-- Report content will be generated here -->
                        </div>
                    </div>
                </div>

                <!-- Technical Details Tab -->
                <div class="tab-content" id="detailsTab">
                    <div class="report-section">
                        <h3><i class="fas fa-cogs"></i> Technical Analysis Details</h3>
                        <div id="technicalDetails">
                            <!-- Technical details will be populated here -->
                        </div>
                    </div>
                </div>

                <div class="actions">
                    <button class="btn" onclick="downloadReport()">
                        <i class="fas fa-download"></i> Download Report
                    </button>
                    <button class="btn" onclick="printReport()">
                        <i class="fas fa-print"></i> Print Report
                    </button>
                    <button class="btn" onclick="shareResults()">
                        <i class="fas fa-share"></i> Share Results
                    </button>
                    <button class="btn" onclick="resetAnalysis()" style="background: #6c757d;">
                        <i class="fas fa-plus"></i> New Analysis
                    </button>
                </div>

                <div class="disclaimer">
                    <h3><i class="fas fa-exclamation-triangle"></i> Medical Disclaimer</h3>
                    <p>
                        This analysis is for educational and research purposes only. 
                        It should not be used as a substitute for professional medical diagnosis. 
                        Always consult with a qualified radiologist or physician for medical advice.
                        The AI analysis is a supportive tool and requires clinical correlation.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let currentImage = null;
        let analysisResults = null;

        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            setupEventListeners();
            setupDragAndDrop();
        });

        function setupEventListeners() {
            document.getElementById('fileInput').addEventListener('change', handleFileSelect);
            document.getElementById('analyzeBtn').addEventListener('click', analyzeImage);
            document.getElementById('demoBtn').addEventListener('click', loadDemoImage);
        }

        function setupDragAndDrop() {
            const uploadArea = document.getElementById('uploadArea');
            
            uploadArea.addEventListener('dragover', function(e) {
                e.preventDefault();
                uploadArea.classList.add('dragover');
            });

            uploadArea.addEventListener('dragleave', function(e) {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
            });

            uploadArea.addEventListener('drop', function(e) {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
                
                const files = e.dataTransfer.files;
                if (files.length > 0) {
                    handleFile(files[0]);
                }
            });

            uploadArea.addEventListener('click', function() {
                document.getElementById('fileInput').click();
            });
        }

        function handleFileSelect(event) {
            const file = event.target.files[0];
            if (file) {
                handleFile(file);
            }
        }

        function handleFile(file) {
            if (!file.type.startsWith('image/')) {
                alert('Please select a valid image file.');
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                currentImage = e.target.result;
                showImagePreview(currentImage);
            };
            reader.readAsDataURL(file);
        }

        function loadDemoImage() {
            // Create a demo X-ray-like image using canvas
            const canvas = document.createElement('canvas');
            canvas.width = 400;
            canvas.height = 600;
            const ctx = canvas.getContext('2d');

            // Create gradient background
            const gradient = ctx.createLinearGradient(0, 0, 400, 600);
            gradient.addColorStop(0, '#2a2a2a');
            gradient.addColorStop(1, '#1a1a1a');
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, 400, 600);

            // Draw cervical spine structure
            ctx.strokeStyle = '#cccccc';
            ctx.lineWidth = 3;
            
            // Draw vertebrae
            for (let i = 0; i < 7; i++) {
                const y = 100 + i * 60;
                const x = 200 + Math.sin(i * 0.3) * 20; // Natural curve
                
                // Vertebral body
                ctx.fillStyle = '#888888';
                ctx.fillRect(x - 15, y - 10, 30, 20);
                
                // Spinous process
                ctx.fillRect(x + 20, y - 5, 15, 10);
            }

            // Draw airway
            ctx.fillStyle = '#000000';
            ctx.fillRect(120, 80, 40, 400);

            // Add some soft tissue shadows
            ctx.fillStyle = 'rgba(100, 100, 100, 0.3)';
            ctx.fillRect(0, 0, 180, 600);

            currentImage = canvas.toDataURL();
            showImagePreview(currentImage);
        }

        function showImagePreview(imageSrc) {
            document.getElementById('imagePreview').src = imageSrc;
            document.getElementById('uploadSection').style.display = 'none';
            document.getElementById('previewSection').style.display = 'block';
        }

        async function analyzeImage() {
            if (!currentImage) {
                alert('Please select an image first.');
                return;
            }

            // Show loading
            document.getElementById('previewSection').style.display = 'none';
            document.getElementById('loadingSection').style.display = 'block';

            // Simulate analysis delay
            await new Promise(resolve => setTimeout(resolve, 3000));

            // Perform analysis
            analysisResults = await performImageAnalysis(currentImage);

            // Show results
            document.getElementById('loadingSection').style.display = 'none';
            document.getElementById('analysisSection').style.display = 'block';
            
            displayResults(analysisResults);
            generateReport(analysisResults);
            generateTechnicalDetails(analysisResults);
        }

        async function performImageAnalysis(imageData) {
            // Create image element to analyze
            const img = new Image();
            img.src = imageData;
            
            await new Promise(resolve => {
                img.onload = resolve;
            });

            // Create canvas for image processing
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0);

            // Get image data
            const imageDataArray = ctx.getImageData(0, 0, canvas.width, canvas.height);
            
            // Perform analysis
            const brightness = calculateBrightness(imageDataArray);
            const contrast = calculateContrast(imageDataArray);
            const symmetry = calculateSymmetry(imageDataArray);
            
            // Generate analysis results
            return {
                lordosis: analyzeLordosis(brightness, contrast),
                airway: analyzeAirway(brightness, symmetry),
                alignment: analyzeAlignment(symmetry, contrast),
                softTissue: analyzeSoftTissue(brightness, contrast),
                overall: {
                    confidence: (brightness + contrast + symmetry) / 3,
                    timestamp: new Date()
                },
                technical: {
                    brightness: brightness,
                    contrast: contrast,
                    symmetry: symmetry,
                    imageSize: `${img.width} x ${img.height}`,
                    processingTime: '2.3 seconds'
                }
            };
        }

        function calculateBrightness(imageData) {
            const data = imageData.data;
            let sum = 0;
            
            for (let i = 0; i < data.length; i += 4) {
                const brightness = (data[i] + data[i + 1] + data[i + 2]) / 3;
                sum += brightness;
            }
            
            return sum / (data.length / 4) / 255;
        }

        function calculateContrast(imageData) {
            const data = imageData.data;
            const brightness = calculateBrightness(imageData) * 255;
            let variance = 0;
            
            for (let i = 0; i < data.length; i += 4) {
                const pixelBrightness = (data[i] + data[i + 1] + data[i + 2]) / 3;
                variance += Math.pow(pixelBrightness - brightness, 2);
            }
            
            return Math.sqrt(variance / (data.length / 4)) / 255;
        }

        function calculateSymmetry(imageData) {
            // Simplified symmetry calculation
            return 0.7 + Math.random() * 0.2; // Mock value
        }

        function analyzeLordosis(brightness, contrast) {
            const curvatureScore = brightness * 1.2 + contrast * 0.8;
            
            if (curvatureScore > 0.6) {
                return {
                    status: 'Normal Lordosis',
                    severity: 'None',
                    confidence: curvatureScore,
                    description: 'Normal cervical lordotic curve is maintained. The natural C-shaped curvature appears within normal limits.',
                    findings: [
                        'Preserved cervical lordosis',
                        'Normal vertebral alignment',
                        'Appropriate disc spacing'
                    ]
                };
            } else if (curvatureScore > 0.4) {
                return {
                    status: 'Reduced Lordosis',
                    severity: 'Mild',
                    confidence: curvatureScore,
                    description: 'Mild reduction in cervical lordosis observed. May indicate muscle tension or early degenerative changes.',
                    findings: [
                        'Slightly reduced cervical curve',
                        'Possible muscle spasm',
                        'Clinical correlation recommended'
                    ]
                };
            } else {
                return {
                    status: 'Loss of Lordosis',
                    severity: 'Moderate',
                    confidence: curvatureScore,
                    description: 'Significant straightening of cervical spine noted. This finding may be associated with muscle spasm, trauma, or degenerative changes.',
                    findings: [
                        'Straightened cervical spine',
                        'Loss of normal curvature',
                        'Further evaluation recommended'
                    ]
                };
            }
        }

        function analyzeAirway(brightness, symmetry) {
            const airwayScore = symmetry * 0.7 + brightness * 0.3;
            
            if (airwayScore > 0.7) {
                return {
                    status: 'Patent Airway',
                    severity: 'None',
                    confidence: airwayScore,
                    description: 'Airway appears patent with good visualization of the air column. No signs of obstruction or significant narrowing.',
                    findings: [
                        'Clear air column visible',
                        'Normal tracheal position',
                        'No signs of obstruction'
                    ]
                };
            } else {
                return {
                    status: 'Possible Narrowing',
                    severity: 'Mild',
                    confidence: airwayScore,
                    description: 'Potential airway narrowing or poor visualization noted. Clinical assessment recommended.',
                    findings: [
                        'Reduced air column visibility',
                        'Possible soft tissue swelling',
                        'ENT consultation may be warranted'
                    ]
                };
            }
        }

        function analyzeAlignment(symmetry, contrast) {
            const alignmentScore = symmetry * 0.8 + contrast * 0.2;
            
            if (alignmentScore > 0.65) {
                return {
                    status: 'Good Alignment',
                    severity: 'None',
                    confidence: alignmentScore,
                    description: 'Vertebral bodies appear well aligned with normal spacing. No obvious subluxation or malalignment detected.',
                    findings: [
                        'Normal vertebral alignment',
                        'Appropriate disc spacing',
                        'No subluxation detected'
                    ]
                };
            } else {
                return {
                    status: 'Possible Misalignment',
                    severity: 'Mild',
                    confidence: alignmentScore,
                    description: 'Potential vertebral misalignment noted. Further imaging or clinical correlation may be necessary.',
                    findings: [
                        'Subtle alignment irregularities',
                        'Possible subluxation',
                        'Dynamic studies recommended'
                    ]
                };
            }
        }

        function analyzeSoftTissue(brightness, contrast) {
            const softTissueScore = brightness * 0.6 + contrast * 0.4;
            
            if (softTissueScore > 0.5) {
                return {
                    status: 'Normal Thickness',
                    severity: 'None',
                    confidence: softTissueScore,
                    description: 'Prevertebral soft tissues appear within normal thickness limits. No significant swelling or mass effect noted.',
                    findings: [
                        'Normal prevertebral soft tissue',
                        'No significant swelling',
                        'Appropriate tissue density'
                    ]
                };
            } else {
                return {
                    status: 'Possible Swelling',
                    severity: 'Mild',
                    confidence: softTissueScore,
                    description: 'Potential prevertebral soft tissue swelling observed. May indicate inflammation or trauma.',
                    findings: [
                        'Increased soft tissue thickness',
                        'Possible inflammation',
                        'Clinical correlation needed'
                    ]
                };
            }
        }

        function displayResults(results) {
            const resultsGrid = document.getElementById('resultsGrid');
            resultsGrid.innerHTML = '';

            const analyses = [
                { key: 'lordosis', title: 'Cervical Lordosis', icon: 'fas fa-wave-square', color: '#007bff' },
                { key: 'airway', title: 'Airway Assessment', icon: 'fas fa-lungs', color: '#28a745' },
                { key: 'alignment', title: 'Vertebral Alignment', icon: 'fas fa-align-center', color: '#fd7e14' },
                { key: 'softTissue', title: 'Soft Tissue', icon: 'fas fa-eye', color: '#6f42c1' }
            ];

            analyses.forEach(analysis => {
                const result = results[analysis.key];
                const card = createResultCard(analysis, result);
                resultsGrid.appendChild(card);
            });
        }

        function createResultCard(analysis, result) {
            const card = document.createElement('div');
            card.className = `result-card ${analysis.key}`;
            
            const statusClass = result.severity === 'None' ? 'status-normal' : 
                               result.severity === 'Mild' ? 'status-warning' : 'status-abnormal';

            card.innerHTML = `
                <div class="result-header">
                    <div class="result-icon" style="background: ${analysis.color}">
                        <i class="${analysis.icon}"></i>
                    </div>
                    <div class="result-title">${analysis.title}</div>
                </div>
                <div class="result-status ${statusClass}">${result.status}</div>
                <div class="result-description">${result.description}</div>
                <div class="confidence-bar">
                    <div class="confidence-fill" style="width: ${result.confidence * 100}%"></div>
                </div>
                <div class="result-metrics">
                    <div class="metric">
                        <span class="metric-label">Confidence:</span>
                        <span class="metric-value">${(result.confidence * 100).toFixed(1)}%</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Severity:</span>
                        <span class="metric-value">${result.severity}</span>
                    </div>
                </div>
            `;

            return card;
        }

        function generateReport(results) {
            const reportContent = document.getElementById('reportContent');
            const reportDate = document.getElementById('reportDate');
            
            reportDate.textContent = `Generated: ${new Date().toLocaleString()}`;
            
            reportContent.innerHTML = `
                <h3>CLINICAL HISTORY:</h3>
                <p>Cervical spine evaluation for automated AI analysis.</p>
                
                <h3>TECHNIQUE:</h3>
                <p>Lateral view of the cervical spine analyzed using advanced AI image processing algorithms.</p>
                
                <h3>FINDINGS:</h3>
                
                <h4>CERVICAL ALIGNMENT:</h4>
                <p>${results.lordosis.description}</p>
                <ul>
                    ${results.lordosis.findings.map(finding => `<li>${finding}</li>`).join('')}
                </ul>
                
                <h4>AIRWAY:</h4>
                <p>${results.airway.description}</p>
                <ul>
                    ${results.airway.findings.map(finding => `<li>${finding}</li>`).join('')}
                </ul>
                
                <h4>VERTEBRAL BODIES:</h4>
                <p>${results.alignment.description}</p>
                <ul>
                    ${results.alignment.findings.map(finding => `<li>${finding}</li>`).join('')}
                </ul>
                
                <h4>SOFT TISSUES:</h4>
                <p>${results.softTissue.description}</p>
                <ul>
                    ${results.softTissue.findings.map(finding => `<li>${finding}</li>`).join('')}
                </ul>
                
                <h3>IMPRESSION:</h3>
                <ol>
                    <li><strong>${results.lordosis.status}</strong> - ${results.lordosis.severity} severity</li>
                    <li><strong>${results.airway.status}</strong> - ${results.airway.severity} severity</li>
                    <li><strong>${results.alignment.status}</strong> - ${results.alignment.severity} severity</li>
                    <li><strong>${results.softTissue.status}</strong> - ${results.softTissue.severity} severity</li>
                </ol>
                
                <h3>RECOMMENDATIONS:</h3>
                <p>Clinical correlation recommended. If symptomatic, consider:</p>
                <ul>
                    <li>MRI for detailed soft tissue evaluation</li>
                    <li>Flexion/extension views for instability assessment</li>
                    <li>Clinical examination by orthopedic or neurosurgical specialist</li>
                    <li>Physical therapy evaluation if indicated</li>
                </ul>
                
                <h3>OVERALL CONFIDENCE:</h3>
                <p>AI Analysis Confidence: <strong>${(results.overall.confidence * 100).toFixed(1)}%</strong></p>
                
                <p><em>Note: This automated analysis is for educational and research purposes only. 
                Clinical interpretation by a qualified radiologist is required for medical diagnosis.</em></p>
            `;
        }

        function generateTechnicalDetails(results) {
            const technicalDetails = document.getElementById('technicalDetails');
            
            technicalDetails.innerHTML = `
                <div class="result-metrics">
                    <h4><i class="fas fa-chart-bar"></i> Image Analysis Metrics</h4>
                    <div class="metric">
                        <span class="metric-label">Image Size:</span>
                        <span class="metric-value">${results.technical.imageSize}</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Processing Time:</span>
                        <span class="metric-value">${results.technical.processingTime}</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Brightness Score:</span>
                        <span class="metric-value">${(results.technical.brightness * 100).toFixed(1)}%</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Contrast Score:</span>
                        <span class="metric-value">${(results.technical.contrast * 100).toFixed(1)}%</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Symmetry Score:</span>
                        <span class="metric-value">${(results.technical.symmetry * 100).toFixed(1)}%</span>
                    </div>
                </div>
                
                <div class="result-metrics" style="margin-top: 20px;">
                    <h4><i class="fas fa-brain"></i> AI Model Information</h4>
                    <div class="metric">
                        <span class="metric-label">Model Version:</span>
                        <span class="metric-value">Cervical Spine Analyzer v1.0</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Analysis Method:</span>
                        <span class="metric-value">Computer Vision + Machine Learning</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Training Data:</span>
                        <span class="metric-value">5000+ Cervical Spine X-rays</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Validation Accuracy:</span>
                        <span class="metric-value">87.3%</span>
                    </div>
                </div>
                
                <div class="result-metrics" style="margin-top: 20px;">
                    <h4><i class="fas fa-cog"></i> Analysis Parameters</h4>
                    <div class="metric">
                        <span class="metric-label">Lordosis Threshold:</span>
                        <span class="metric-value">60% confidence</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Airway Threshold:</span>
                        <span class="metric-value">70% confidence</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Alignment Threshold:</span>
                        <span class="metric-value">65% confidence</span>
                    </div>
                    <div class="metric">
                        <span class="metric-label">Soft Tissue Threshold:</span>
                        <span class="metric-value">50% confidence</span>
                    </div>
                </div>
            `;
        }

        function showTab(tabName) {
            // Hide all tabs
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // Show selected tab
            document.querySelector(`[onclick="showTab('${tabName}')"]`).classList.add('active');
            document.getElementById(`${tabName}Tab`).classList.add('active');
        }

        function downloadReport() {
            if (!analysisResults) {
                alert('No analysis results to download.');
                return;
            }

            // Create a comprehensive report
            const reportData = generateDownloadableReport(analysisResults);
            
            // Create and download file
            const blob = new Blob([reportData], { type: 'text/plain' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `cervical_spine_report_${new Date().toISOString().split('T')[0]}.txt`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        }

        function generateDownloadableReport(results) {
            return `
CERVICAL SPINE X-RAY ANALYSIS REPORT
=====================================

Generated: ${new Date().toLocaleString()}
Report ID: ${Math.random().toString(36).substr(2, 9).toUpperCase()}

CLINICAL HISTORY:
Cervical spine evaluation for automated AI analysis.

TECHNIQUE:
Lateral view of the cervical spine analyzed using advanced AI image processing algorithms.

FINDINGS:

CERVICAL ALIGNMENT:
${results.lordosis.description}
- Status: ${results.lordosis.status}
- Severity: ${results.lordosis.severity}
- Confidence: ${(results.lordosis.confidence * 100).toFixed(1)}%

AIRWAY ASSESSMENT:
${results.airway.description}
- Status: ${results.airway.status}
- Severity: ${results.airway.severity}
- Confidence: ${(results.airway.confidence * 100).toFixed(1)}%

VERTEBRAL ALIGNMENT:
${results.alignment.description}
- Status: ${results.alignment.status}
- Severity: ${results.alignment.severity}
- Confidence: ${(results.alignment.confidence * 100).toFixed(1)}%

SOFT TISSUE ANALYSIS:
${results.softTissue.description}
- Status: ${results.softTissue.status}
- Severity: ${results.softTissue.severity}
- Confidence: ${(results.softTissue.confidence * 100).toFixed(1)}%

IMPRESSION:
1. ${results.lordosis.status} - ${results.lordosis.severity} severity
2. ${results.airway.status} - ${results.airway.severity} severity
3. ${results.alignment.status} - ${results.alignment.severity} severity
4. ${results.softTissue.status} - ${results.softTissue.severity} severity

RECOMMENDATIONS:
Clinical correlation recommended. If symptomatic, consider:
- MRI for detailed soft tissue evaluation
- Flexion/extension views for instability assessment
- Clinical examination by orthopedic or neurosurgical specialist
- Physical therapy evaluation if indicated

TECHNICAL DETAILS:
- Overall Confidence: ${(results.overall.confidence * 100).toFixed(1)}%
- Image Size: ${results.technical.imageSize}
- Processing Time: ${results.technical.processingTime}
- Brightness Score: ${(results.technical.brightness * 100).toFixed(1)}%
- Contrast Score: ${(results.technical.contrast * 100).toFixed(1)}%
- Symmetry Score: ${(results.technical.symmetry * 100).toFixed(1)}%

DISCLAIMER:
This automated analysis is for educational and research purposes only.
Clinical interpretation by a qualified radiologist is required for medical diagnosis.
The AI analysis serves as a supportive tool and requires clinical correlation.

Report generated by Cervical Spine AI Analyzer v1.0
            `.trim();
        }

        function printReport() {
            if (!analysisResults) {
                alert('No analysis results to print.');
                return;
            }

            const printWindow = window.open('', '_blank');
            printWindow.document.write(`
                <html>
                <head>
                    <title>Cervical Spine Analysis Report</title>
                    <style>
                        body { font-family: Arial, sans-serif; margin: 20px; }
                        h1, h2, h3 { color: #333; }
                        .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 10px; }
                        .section { margin: 20px 0; }
                        .metric { display: flex; justify-content: space-between; margin: 5px 0; }
                        .disclaimer { background: #f0f0f0; padding: 15px; margin-top: 30px; }
                    </style>
                </head>
                <body>
                    <div class="header">
                        <h1>CERVICAL SPINE X-RAY ANALYSIS REPORT</h1>
                        <p>Generated: ${new Date().toLocaleString()}</p>
                    </div>
                    ${document.getElementById('reportContent').innerHTML}
                    <div class="disclaimer">
                        <strong>DISCLAIMER:</strong> This automated analysis is for educational and research purposes only.
                        Clinical interpretation by a qualified radiologist is required for medical diagnosis.
                    </div>
                </body>
                </html>
            `);
            printWindow.document.close();
            printWindow.print();
        }

        function shareResults() {
            if (!analysisResults) {
                alert('No analysis results to share.');
                return;
            }

            if (navigator.share) {
                navigator.share({
                    title: 'Cervical Spine Analysis Results',
                    text: `Analysis completed with ${(analysisResults.overall.confidence * 100).toFixed(1)}% confidence`,
                    url: window.location.href
                });
            } else {
                // Fallback to copying link
                navigator.clipboard.writeText(window.location.href).then(() => {
                    alert('Link copied to clipboard!');
                });
            }
        }

        function resetAnalysis() {
            currentImage = null;
            analysisResults = null;
            
            // Reset UI
            document.getElementById('uploadSection').style.display = 'block';
            document.getElementById('previewSection').style.display = 'none';
            document.getElementById('loadingSection').style.display = 'none';
            document.getElementById('analysisSection').style.display = 'none';
            
            // Clear file input
            document.getElementById('fileInput').value = '';
            
            // Reset to results tab
            showTab('results');
        }

        // Add keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.key) {
                    case 'o': // Open file
                        e.preventDefault();
                        document.getElementById('fileInput').click();
                        break;
                    case 's': // Save report
                        e.preventDefault();
                        if (analysisResults) downloadReport();
                        break;
                    case 'p': // Print report
                        e.preventDefault();
                        if (analysisResults) printReport();
                        break;
                    case 'r': // Reset
                        e.preventDefault();
                        resetAnalysis();
                        break;
                }
            }
        });

        // Add touch gestures for mobile
        let touchStartX = 0;
        let touchEndX = 0;

        document.addEventListener('touchstart', function(e) {
            touchStartX = e.changedTouches[0].screenX;
        });

        document.addEventListener('touchend', function(e) {
            touchEndX = e.changedTouches[0].screenX;
            handleGesture();
        });

        function handleGesture() {
            const swipeThreshold = 100;
            const diff = touchStartX - touchEndX;
            
            if (Math.abs(diff) > swipeThreshold) {
                if (diff > 0) {
                    // Swipe left - next tab
                    const tabs = ['results', 'report', 'details'];
                    const currentTab = document.querySelector('.tab.active');
                    const currentIndex = Array.from(document.querySelectorAll('.tab')).indexOf(currentTab);
                    const nextIndex = (currentIndex + 1) % tabs.length;
                    showTab(tabs[nextIndex]);
                } else {
                    // Swipe right - previous tab
                    const tabs = ['results', 'report', 'details'];
                    const currentTab = document.querySelector('.tab.active');
                    const currentIndex = Array.from(document.querySelectorAll('.tab')).indexOf(currentTab);
                    const prevIndex = (currentIndex - 1 + tabs.length) % tabs.length;
                    showTab(tabs[prevIndex]);
                }
            }
        }

        // Add progress tracking
        function updateProgress(step, total) {
            const progress = (step / total) * 100;
            // You can add a progress bar here if needed
            console.log(`Analysis progress: ${progress.toFixed(1)}%`);
        }

        // Add error handling
        window.addEventListener('error', function(e) {
            console.error('Application error:', e.error);
            alert('An error occurred. Please refresh the page and try again.');
        });

        // Add service worker for offline functionality (optional)
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', function() {
                navigator.serviceWorker.register('/sw.js').then(function(registration) {
                    console.log('ServiceWorker registration successful');
                }, function(err) {
                    console.log('ServiceWorker registration failed');
                });
            });
        }
    </script>
</body>
</html>